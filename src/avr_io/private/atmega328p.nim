include mapped_io
include usart
include timer


const
  PINB*   = MappedIoRegister[uint8](0x23)
  DDRB*   = MappedIoRegister[uint8](0x24)
  PORTB*  = MappedIoRegister[uint8](0x25)
  PINC*   = MappedIoRegister[uint8](0x26)
  DDRC*   = MappedIoRegister[uint8](0x27)
  PORTC*  = MappedIoRegister[uint8](0x28)
  PIND*   = MappedIoRegister[uint8](0x29)
  DDRD*   = MappedIoRegister[uint8](0x2A)
  PORTD*  = MappedIoRegister[uint8](0x2B)
  TIFR0*  = MappedIoRegister[uint8](0x35)
  TIFR1*  = MappedIoRegister[uint8](0x36)
  TIFR2*  = MappedIoRegister[uint8](0x37)
  PCIFR*  = MappedIoRegister[uint8](0x3B)
  EIFR*   = MappedIoRegister[uint8](0x3C)
  EIMSK*  = MappedIoRegister[uint8](0x3D)
  GPIOR0* = MappedIoRegister[uint8](0x3E)
  EECR*   = MappedIoRegister[uint8](0x3F)
  EEDR*   = MappedIoRegister[uint8](0x40)
  EEAR*   = MappedIoRegister[uint16](0x41)
  EEARL*  = MappedIoRegister[uint8](0x41)
  EEARH*  = MappedIoRegister[uint8](0x42)
  GTCCR*  = MappedIoRegister[uint8](0x43)
  TCCR0A* = MappedIoRegister[uint8](0x44)
  TCCR0B* = MappedIoRegister[uint8](0x45)
  TCNT0*  = MappedIoRegister[uint8](0x46)
  OCR0A*  = MappedIoRegister[uint8](0x47)
  OCR0B*  = MappedIoRegister[uint8](0x48)
  GPIOR1* = MappedIoRegister[uint8](0x4A)
  GPIOR2* = MappedIoRegister[uint8](0x4B)
  SPCR*   = MappedIoRegister[uint8](0x4C)
  SPSR*   = MappedIoRegister[uint8](0x4D)
  SPDR*   = MappedIoRegister[uint8](0x4E)
  ACSR*   = MappedIoRegister[uint8](0x50)
  SMCR*   = MappedIoRegister[uint8](0x53)
  MCUSR*  = MappedIoRegister[uint8](0x54)
  MCUCR*  = MappedIoRegister[uint8](0x55)
  SPMCSR* = MappedIoRegister[uint8](0x57)
  SPL*    = MappedIoRegister[uint8](0x5D)
  SPH*    = MappedIoRegister[uint8](0x5E)
  SREG*   = MappedIoRegister[uint8](0x5F)
  WDTCSR* = MappedIoRegister[uint8](0x60)
  CLKPR*  = MappedIoRegister[uint8](0x61)
  PRR*    = MappedIoRegister[uint8](0x64)
  OSCCAL* = MappedIoRegister[uint8](0x66)
  PCICR*  = MappedIoRegister[uint8](0x68)
  EICRA*  = MappedIoRegister[uint8](0x69)
  PCMSK0* = MappedIoRegister[uint8](0x6B)
  PCMSK1* = MappedIoRegister[uint8](0x6C)
  PCMSK2* = MappedIoRegister[uint8](0x6D)
  TIMSK0* = MappedIoRegister[uint8](0x6E)
  TIMSK1* = MappedIoRegister[uint8](0x6F)
  TIMSK2* = MappedIoRegister[uint8](0x70)
  ADC*    = MappedIoRegister[uint16](0x78)
  ADCL*   = MappedIoRegister[uint8](0x78)
  ADCH*   = MappedIoRegister[uint8](0x79)
  ADCSRA* = MappedIoRegister[uint8](0x7A)
  ADCSRB* = MappedIoRegister[uint8](0x7B)
  ADMUX*  = MappedIoRegister[uint8](0x7C)
  DIDR0*  = MappedIoRegister[uint8](0x7E)
  DIDR1*  = MappedIoRegister[uint8](0x7F)
  TCCR1A* = MappedIoRegister[uint8](0x80)
  TCCR1B* = MappedIoRegister[uint8](0x81)
  TCCR1C* = MappedIoRegister[uint8](0x82)
  TCNT1*  = MappedIoRegister[uint16](0x84)
  TCNT1L* = MappedIoRegister[uint8](0x84)
  TCNT1H* = MappedIoRegister[uint8](0x85)
  ICR1*   = MappedIoRegister[uint16](0x86)
  ICR1L*  = MappedIoRegister[uint8](0x86)
  ICR1H*  = MappedIoRegister[uint8](0x87)
  OCR1A*  = MappedIoRegister[uint16](0x88)
  OCR1AL* = MappedIoRegister[uint8](0x88)
  OCR1AH* = MappedIoRegister[uint8](0x89)
  OCR1B*  = MappedIoRegister[uint16](0x8A)
  OCR1BL* = MappedIoRegister[uint8](0x8A)
  OCR1BH* = MappedIoRegister[uint8](0x8B)
  TCCR2A* = MappedIoRegister[uint8](0xB0)
  TCCR2B* = MappedIoRegister[uint8](0xB1)
  TCNT2*  = MappedIoRegister[uint8](0xB2)
  OCR2A*  = MappedIoRegister[uint8](0xB3)
  OCR2B*  = MappedIoRegister[uint8](0xB4)
  ASSR*   = MappedIoRegister[uint8](0xB6)
  TWBR*   = MappedIoRegister[uint8](0xB8)
  TWSR*   = MappedIoRegister[uint8](0xB9)
  TWAR*   = MappedIoRegister[uint8](0xBA)
  TWDR*   = MappedIoRegister[uint8](0xBB)
  TWCR*   = MappedIoRegister[uint8](0xBC)
  TWAMR*  = MappedIoRegister[uint8](0xBD)
  UCSR0A* = MappedIoRegister[uint8](0xC0)
  UCSR0B* = MappedIoRegister[uint8](0xC1)
  UCSR0C* = MappedIoRegister[uint8](0xC2)
  UBRR0*  = MappedIoRegister[uint16](0xC4)
  UBRR0L* = MappedIoRegister[uint8](0xC4)
  UBRR0H* = MappedIoRegister[uint8](0xC5)
  UDR0*   = MappedIoRegister[uint8](0xC6)

const
  portB* = Port(direction: DDRB, output: PORTB, input: PINB)
  portC* = Port(direction: DDRC, output: PORTC, input: PINC)
  portD* = Port(direction: DDRD, output: PORTD, input: PIND)

  usart0* = BaseUsart(
    baudLo: UBRR0L, baudHi: UBRR0H, ctlA: UCSR0A, ctlB: UCSR0B, 
    ctlC: UCSR0C, udr: UDR0)

  timer0* = Timer8BitPwm(
    tccra: TCCR0A, tccrb: TCCR0B, tcnt: TCNT0, ocra: OCR0A, ocrb: OCR0B, 
    timsk: TIMSK0, tifr: TIFR0)
  timer1* = Timer16BitPwm(tccra: TCCR1A, tccrb: TCCR1B, tccrc: TCCR1C,
    tcnt: TCNT1, tcnth: TCNT1H, tcntl: TCNT1L, ocra: OCR1A, ocrah: OCR1AH, 
    ocral: OCR1AL, ocrb: OCR1B, ocrbh: OCR1BH, ocrbl: OCR1BL, icr: ICR1, 
    icrh: ICR1H, icrl: ICR1L, timsk: TIMSK1, tifr: TIFR1)
  timer2* = Timer8BitPwmAsync(tccra: TCCR2A, tccrb: TCCR2B, tcnt: TCNT2, 
    ocra: OCR2A, ocrb: OCR2B, assr: ASSR, timsk: TIMSK2, tifr: TIFR2, 
    gtccr: GTCCR)
